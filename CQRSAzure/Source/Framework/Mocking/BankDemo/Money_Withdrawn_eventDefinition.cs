//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.Serialization;

namespace Accounts.Account.eventDefinition
{

    /// <summary>
    /// Money was taken from the account
    /// </summary>
    [Serializable()]
    [CQRSAzure.EventSourcing.DomainNameAttribute("Accounts")]
    [CQRSAzure.EventSourcing.Category("Financial")]
    public partial class Money_Withdrawn 
        : object, 
        IMoney_Withdrawn,
        CQRSAzure.EventSourcing.IEvent<Account>
    {
        
        // Version number - always increment this if the event definition changes
        public const int EVENT_VERSION = 0;
        
        #region Private members
        // TODO: Make this property read only
        private decimal _Amount;
        
        // TODO: Make this property read only
        private System.DateTime _Withdrawn_Date;
        
        // TODO: Make this property read only
        private string _Method;
        
        // TODO: Make this property read only
        private string _Notes;
        #endregion
        
        /// <summary>
        /// Empty constructor For serialisation
        /// This should be removed If serialisation Is Not needed
        /// </summary>
        public Money_Withdrawn()
        {
        }
        
        /// <summary>
        /// Create And populate a New instance Of this Class from the underlying Interface
        /// </summary>
        /// <remarks>
        /// This should be called When the Event Is created from an Event stream
        /// </remarks>
        public Money_Withdrawn(IMoney_Withdrawn Money_WithdrawnInit)
        {
            _Amount = Money_WithdrawnInit.Amount;
            _Withdrawn_Date = Money_WithdrawnInit.Withdrawn_Date;
            _Method = Money_WithdrawnInit.Method;
            _Notes = Money_WithdrawnInit.Notes;
        }
        
        /// <summary>
        /// Create And populate a New instance Of this Class from the underlying properties
        /// </summary>
        /// <remarks>
        /// This should be called When the Event Is created from an Event stream
        /// </remarks>
        /// <param name="Amount">
        /// The amount withdrawn
        /// Thius is always in the account base currency
        /// </param>
        /// <param name="Withdrawn Date">
        /// The date the money was withdrawn
        /// The date withdrawn is also the date applied to the balance
        /// </param>
        /// <param name="Method">
        /// How the money was withdran
        /// Over the counter, ATM, internet etc.
        /// </param>
        /// <param name="Notes">
        /// Additional notes for the money withdrawal
        /// </param>
        public Money_Withdrawn(decimal Amount_In, System.DateTime Withdrawn_Date_In, string Method_In, string Notes_In)
        {
            _Amount = Amount_In;
            _Withdrawn_Date = Withdrawn_Date_In;
            _Method = Method_In;
            _Notes = Notes_In;
        }
        
        /// <summary>
        /// Create And populate a New instance Of this Class from the serialized data
        /// </summary>
        /// <param name="info">
        /// The SerializationInfo passed In containing the values Of this Event
        /// </param>
        /// <param name="context">
        /// Additional StreamingContext On how the Event Is streamed
        /// </param>
        public Money_Withdrawn(SerializationInfo info, StreamingContext context)
        {
            _Amount = info.GetDecimal("Amount");
            _Withdrawn_Date = info.GetDateTime("Withdrawn_Date");
            _Method = info.GetString("Method");
            _Notes = info.GetString("Notes");
        }
        
        public uint Version
        {
            get
            {
                return EVENT_VERSION;
            }
        }
        
        /// <summary>
        /// The amount withdrawn
        /// </summary>
        /// <remarks>
        /// Thius is always in the account base currency
        /// </remarks>
        public decimal Amount
        {
            get
            {
                return _Amount;
            }
        }
        
        /// <summary>
        /// The date the money was withdrawn
        /// </summary>
        /// <remarks>
        /// The date withdrawn is also the date applied to the balance
        /// </remarks>
        public System.DateTime Withdrawn_Date
        {
            get
            {
                return _Withdrawn_Date;
            }
        }
        
        /// <summary>
        /// How the money was withdran
        /// </summary>
        /// <remarks>
        /// Over the counter, ATM, internet etc.
        /// </remarks>
        public string Method
        {
            get
            {
                return _Method;
            }
        }
        
        /// <summary>
        /// Additional notes for the money withdrawal
        /// </summary>
        public string Notes
        {
            get
            {
                return _Notes;
            }
        }
        
        /// <summary>
        /// Factory method To create an instance Of this Event
        /// </summary>
        /// <param name="Amount">
        /// The amount withdrawn
        /// Thius is always in the account base currency
        /// </param>
        /// <param name="Withdrawn Date">
        /// The date the money was withdrawn
        /// The date withdrawn is also the date applied to the balance
        /// </param>
        /// <param name="Method">
        /// How the money was withdran
        /// Over the counter, ATM, internet etc.
        /// </param>
        /// <param name="Notes">
        /// Additional notes for the money withdrawal
        /// </param>
        static IMoney_Withdrawn Create(decimal Amount_In, System.DateTime Withdrawn_Date_In, string Method_In, string Notes_In)
        {
            return new Money_Withdrawn(Amount_In, Withdrawn_Date_In, Method_In, Notes_In);
        }
        
        /// <summary>
        /// Populates a SerializationInfo with the data needed to serialize this event instance
        /// </summary>
        /// <remarks>
        /// The version number is also to be saved
        /// </remarks>
        public void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            info.AddValue("Amount", _Amount);
            info.AddValue("Withdrawn_Date", _Withdrawn_Date);
            info.AddValue("Method", _Method);
            info.AddValue("Notes", _Notes);
            info.AddValue("EVENT_VERSION", EVENT_VERSION);
        }
    }
}
